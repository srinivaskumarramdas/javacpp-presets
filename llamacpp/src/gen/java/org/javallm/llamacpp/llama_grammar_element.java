// Targeted by JavaCPP version 1.5.10-SNAPSHOT: DO NOT EDIT THIS FILE

package org.javallm.llamacpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.javallm.llamacpp.global.llama.*;


    @Properties(inherit = org.javallm.llamacpp.presets.llama.class)
public class llama_grammar_element extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public llama_grammar_element() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public llama_grammar_element(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public llama_grammar_element(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public llama_grammar_element position(long position) {
            return (llama_grammar_element)super.position(position);
        }
        @Override public llama_grammar_element getPointer(long i) {
            return new llama_grammar_element((Pointer)this).offsetAddress(i);
        }
    
        public native @Cast("llama_gretype") int type(); public native llama_grammar_element type(int setter);
        public native @Cast("uint32_t") int value(); public native llama_grammar_element value(int setter); // Unicode code point or rule ID
    }
