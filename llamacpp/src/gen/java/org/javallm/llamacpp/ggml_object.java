// Targeted by JavaCPP version 1.5.10-SNAPSHOT: DO NOT EDIT THIS FILE

package org.javallm.llamacpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.javallm.llamacpp.global.llama.*;


    // ggml object
    @Properties(inherit = org.javallm.llamacpp.presets.llama.class)
public class ggml_object extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public ggml_object() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public ggml_object(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public ggml_object(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public ggml_object position(long position) {
            return (ggml_object)super.position(position);
        }
        @Override public ggml_object getPointer(long i) {
            return new ggml_object((Pointer)this).offsetAddress(i);
        }
    
        public native @Cast("size_t") long offs(); public native ggml_object offs(long setter);
        public native @Cast("size_t") long size(); public native ggml_object size(long setter);

        public native ggml_object next(); public native ggml_object next(ggml_object setter);

        public native @Cast("ggml_object_type") int type(); public native ggml_object type(int setter);

        public native @Cast("char") byte padding(int i); public native ggml_object padding(int i, byte setter);
        @MemberGetter public native @Cast("char*") BytePointer padding();
    }
