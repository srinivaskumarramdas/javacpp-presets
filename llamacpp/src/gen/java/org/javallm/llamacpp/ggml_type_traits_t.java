// Targeted by JavaCPP version 1.5.10-SNAPSHOT: DO NOT EDIT THIS FILE

package org.javallm.llamacpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.javallm.llamacpp.global.llama.*;


    @Properties(inherit = org.javallm.llamacpp.presets.llama.class)
public class ggml_type_traits_t extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public ggml_type_traits_t() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public ggml_type_traits_t(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public ggml_type_traits_t(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public ggml_type_traits_t position(long position) {
            return (ggml_type_traits_t)super.position(position);
        }
        @Override public ggml_type_traits_t getPointer(long i) {
            return new ggml_type_traits_t((Pointer)this).offsetAddress(i);
        }
    
        public native @Cast("const char*") BytePointer type_name(); public native ggml_type_traits_t type_name(BytePointer setter);
        public native int blck_size(); public native ggml_type_traits_t blck_size(int setter);
        public native @Cast("size_t") long type_size(); public native ggml_type_traits_t type_size(long setter);
        public native @Cast("bool") boolean is_quantized(); public native ggml_type_traits_t is_quantized(boolean setter);
        public native ggml_to_float_t to_float(); public native ggml_type_traits_t to_float(ggml_to_float_t setter);
        public native ggml_from_float_t from_float(); public native ggml_type_traits_t from_float(ggml_from_float_t setter);
        public native ggml_from_float_t from_float_reference(); public native ggml_type_traits_t from_float_reference(ggml_from_float_t setter);
        public native ggml_vec_dot_t vec_dot(); public native ggml_type_traits_t vec_dot(ggml_vec_dot_t setter);
        public native @Cast("ggml_type") int vec_dot_type(); public native ggml_type_traits_t vec_dot_type(int setter);
    }
